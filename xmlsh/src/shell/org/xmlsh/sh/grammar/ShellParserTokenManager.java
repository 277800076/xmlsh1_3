/* Generated By:JavaCC: Do not edit this line. ShellParserTokenManager.java */
package org.xmlsh.sh.grammar;
import org.xmlsh.sh.core.*;
import java.io.PrintWriter;
import java.util.ArrayList;
import org.xmlsh.core.XEnvironment;

public class ShellParserTokenManager implements ShellParserConstants
{
  String here_end = "EOF";
  boolean in_for = false ;

  private String readXExpr()
  {
        StringBuffer sb = new StringBuffer("<[");
        char c;
        try {
                while( (c=input_stream.readChar())> 0 ) {
                        sb.append(c);
                        if( sb.toString().endsWith( "]>") )
                                break;
                }
        } catch( Exception e ){}
        return sb.toString();
  }
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1ffe0000L) != 0L)
         {
            jjmatchedKind = 40;
            return 78;
         }
         if ((active0 & 0x120000000L) != 0L)
            return 78;
         return -1;
      case 1:
         if ((active0 & 0x1f1c0000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 40;
               jjmatchedPos = 1;
            }
            return 78;
         }
         if ((active0 & 0xe20000L) != 0L)
            return 78;
         return -1;
      case 2:
         if ((active0 & 0xf9c0000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 2;
            return 78;
         }
         if ((active0 & 0x10000000L) != 0L)
            return 78;
         return -1;
      case 3:
         if ((active0 & 0xc000000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 3;
            return 78;
         }
         if ((active0 & 0x39c0000L) != 0L)
            return 78;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 4);
      case 33:
         return jjStopAtPos(0, 30);
      case 40:
         return jjStopAtPos(0, 31);
      case 41:
         return jjStopAtPos(0, 36);
      case 59:
         return jjStopAtPos(0, 6);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x1000000L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0xc00000L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2140000L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x10200000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x20000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x80000L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x8000000L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x4000000L);
      case 123:
         return jjStartNfaWithStates_0(0, 29, 78);
      case 125:
         return jjStartNfaWithStates_0(0, 32, 78);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000L);
      case 102:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(1, 17, 78);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x4080000L);
      case 105:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(1, 21, 78);
         break;
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x140000L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000L);
      case 111:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x10800000L);
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x4040000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000L);
      case 114:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 28, 78);
         break;
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x1100000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 99:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 25, 78);
         break;
      case 101:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(3, 20, 78);
         else if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(3, 23, 78);
         else if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 78);
         break;
      case 102:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(3, 18, 78);
         break;
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000L);
      case 110:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(3, 19, 78);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 78);
         break;
      case 108:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(4, 27, 78);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 78;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 78:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  else if (curChar == 36)
                     jjCheckNAddStates(5, 7);
                  else if (curChar == 61)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAddStates(8, 13);
                  }
                  if ((0x87ffc40000000000L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(14, 16);
                  }
                  else if (curChar == 36)
                     jjCheckNAddStates(17, 19);
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 22;
                  if (curChar == 36)
                     jjCheckNAdd(20);
                  if (curChar == 36)
                     jjCheckNAdd(5);
                  break;
               case 0:
                  if ((0x87ffc40000000000L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(20, 27);
                  }
                  else if (curChar == 36)
                     jjCheckNAddStates(28, 33);
                  else if (curChar == 39)
                     jjCheckNAddStates(34, 37);
                  else if (curChar == 34)
                     jjCheckNAddStates(38, 43);
                  else if (curChar == 35)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(1);
                  }
                  if (curChar == 36)
                     jjCheckNAddTwoStates(5, 20);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x87ffc40000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(20, 27);
                  break;
               case 3:
                  if ((0x87ffc40000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(14, 16);
                  break;
               case 4:
                  if (curChar == 36)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(44, 47);
                  break;
               case 6:
                  if (curChar == 36)
                     jjCheckNAddStates(5, 7);
                  break;
               case 7:
                  if (curChar == 40)
                     jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(8, 10);
                  break;
               case 9:
                  if (curChar != 62)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(14, 16);
                  break;
               case 10:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 13:
                  jjAddStates(48, 49);
                  break;
               case 15:
                  if (curChar == 40)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(16, 17);
                  break;
               case 17:
                  if (curChar != 41)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(14, 16);
                  break;
               case 18:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  break;
               case 19:
                  if (curChar == 36)
                     jjCheckNAdd(20);
                  break;
               case 20:
                  if ((0x83ff040800000000L & l) != 0L)
                     jjCheckNAddStates(50, 55);
                  break;
               case 22:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar != 61)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(8, 13);
                  break;
               case 25:
                  if ((0xa7fffc2affffd9ffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 27:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 28:
                  if (curChar == 36)
                     jjCheckNAdd(29);
                  break;
               case 29:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(60, 64);
                  break;
               case 30:
                  if (curChar == 36)
                     jjAddStates(65, 67);
                  break;
               case 31:
                  if (curChar == 40)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(32, 34);
                  break;
               case 33:
                  if (curChar != 62)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 34:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 37:
                  jjAddStates(68, 69);
                  break;
               case 39:
                  if (curChar == 40)
                     jjCheckNAdd(40);
                  break;
               case 40:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if (curChar != 41)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 42:
                  if (curChar == 34)
                     jjCheckNAddStates(70, 72);
                  break;
               case 43:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(70, 72);
                  break;
               case 45:
                  jjCheckNAddStates(70, 72);
                  break;
               case 46:
                  if (curChar == 34 && kind > 47)
                     kind = 47;
                  break;
               case 47:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 48:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 39 && kind > 47)
                     kind = 47;
                  break;
               case 50:
                  if (curChar == 36)
                     jjCheckNAddStates(17, 19);
                  break;
               case 51:
                  if (curChar == 40)
                     jjCheckNAdd(52);
                  break;
               case 52:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(52, 54);
                  break;
               case 53:
                  if (curChar == 62)
                     jjCheckNAddStates(0, 4);
                  break;
               case 54:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 57:
                  jjAddStates(73, 74);
                  break;
               case 59:
                  if (curChar == 40)
                     jjCheckNAdd(60);
                  break;
               case 60:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 61:
                  if (curChar == 41)
                     jjCheckNAddStates(0, 4);
                  break;
               case 62:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(5, 20);
                  break;
               case 63:
                  if (curChar == 34)
                     jjCheckNAddStates(38, 43);
                  break;
               case 64:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 66:
                  jjCheckNAddStates(75, 77);
                  break;
               case 67:
                  if (curChar == 34 && kind > 40)
                     kind = 40;
                  break;
               case 68:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 70:
                  jjCheckNAddStates(78, 80);
                  break;
               case 71:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(23, 24);
                  break;
               case 72:
                  if (curChar == 39)
                     jjCheckNAddStates(34, 37);
                  break;
               case 73:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(73, 74);
                  break;
               case 74:
                  if (curChar == 39 && kind > 40)
                     kind = 40;
                  break;
               case 75:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 76:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(23, 24);
                  break;
               case 77:
                  if (curChar == 36)
                     jjCheckNAddStates(28, 33);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 78:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(14, 16);
                  }
                  break;
               case 0:
                  if ((0x2ffffffeaffffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(20, 27);
                  break;
               case 1:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x2ffffffeaffffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(14, 16);
                  break;
               case 5:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(44, 47);
                  break;
               case 8:
                  jjAddStates(81, 82);
                  break;
               case 12:
                  if (curChar == 123)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(13, 14);
                  break;
               case 14:
                  if (curChar != 125)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(14, 16);
                  break;
               case 16:
                  jjAddStates(83, 84);
                  break;
               case 18:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  break;
               case 20:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(50, 55);
                  break;
               case 21:
                  if (curChar == 91 && kind > 47)
                     kind = 47;
                  break;
               case 25:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 26:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 29:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(60, 64);
                  break;
               case 32:
                  jjAddStates(85, 86);
                  break;
               case 36:
                  if (curChar == 123)
                     jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar != 125)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 40:
                  jjAddStates(87, 88);
                  break;
               case 43:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(70, 72);
                  break;
               case 44:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  jjCheckNAddStates(70, 72);
                  break;
               case 48:
                  jjAddStates(89, 90);
                  break;
               case 52:
                  jjAddStates(91, 92);
                  break;
               case 56:
                  if (curChar == 123)
                     jjCheckNAdd(57);
                  break;
               case 57:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(57, 58);
                  break;
               case 58:
                  if (curChar == 125)
                     jjCheckNAddStates(0, 4);
                  break;
               case 60:
                  jjAddStates(93, 94);
                  break;
               case 64:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 65:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  jjCheckNAddStates(75, 77);
                  break;
               case 68:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 69:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 70:
                  jjCheckNAddStates(78, 80);
                  break;
               case 73:
                  jjAddStates(95, 96);
                  break;
               case 75:
                  jjAddStates(97, 98);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(81, 82);
                  break;
               case 13:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(48, 49);
                  break;
               case 16:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(83, 84);
                  break;
               case 25:
               case 27:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(56, 59);
                  break;
               case 32:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(85, 86);
                  break;
               case 37:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(68, 69);
                  break;
               case 40:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(87, 88);
                  break;
               case 43:
               case 45:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(70, 72);
                  break;
               case 48:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(89, 90);
                  break;
               case 52:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(91, 92);
                  break;
               case 57:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(73, 74);
                  break;
               case 60:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(93, 94);
                  break;
               case 64:
               case 66:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 68:
               case 70:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 73:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(95, 96);
                  break;
               case 75:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(97, 98);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 78 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 42;
            return 81;
         }
         return -1;
      case 1:
         if ((active0 & 0x200000000L) != 0L)
            return 81;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 4);
      case 38:
         jjmatchedKind = 37;
         return jjMoveStringLiteralDfa1_1(0x80L);
      case 41:
         return jjStopAtPos(0, 36);
      case 59:
         jjmatchedKind = 38;
         return jjMoveStringLiteralDfa1_1(0x200L);
      case 60:
         jjmatchedKind = 34;
         return jjMoveStringLiteralDfa1_1(0x2000000d400L);
      case 62:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_1(0x12800L);
      case 105:
         return jjMoveStringLiteralDfa1_1(0x200000000L);
      case 124:
         jjmatchedKind = 39;
         return jjMoveStringLiteralDfa1_1(0x100L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         break;
      case 59:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         break;
      case 60:
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 10;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active0, 0x8000L);
      case 62:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         break;
      case 91:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         break;
      case 110:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_1(1, 33, 81);
         break;
      case 124:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         else if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private final int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(2, 15);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 81;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 81:
                  if ((0xa7fffc2affffd9ffL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(99, 102);
                  }
                  else if (curChar == 36)
                     jjCheckNAddStates(103, 105);
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  else if (curChar == 36)
                     jjCheckNAddStates(111, 113);
                  else if (curChar == 61)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAddStates(114, 119);
                  }
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 36)
                     jjCheckNAdd(23);
                  if (curChar == 36)
                     jjCheckNAdd(6);
                  break;
               case 0:
                  if ((0xa7fffc2affffd9ffL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(99, 102);
                  }
                  else if (curChar == 36)
                     jjCheckNAddStates(120, 125);
                  else if (curChar == 39)
                     jjCheckNAddStates(126, 129);
                  else if (curChar == 34)
                     jjCheckNAddStates(130, 135);
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  else if (curChar == 36)
                     jjCheckNAddTwoStates(6, 23);
                  else if (curChar == 35)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(1);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xa7fffc2affffd9ffL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 4:
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 5:
                  if (curChar == 36)
                     jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(136, 140);
                  break;
               case 7:
                  if (curChar == 36)
                     jjCheckNAddStates(103, 105);
                  break;
               case 8:
                  if (curChar == 40)
                     jjCheckNAdd(9);
                  break;
               case 9:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(9, 11);
                  break;
               case 10:
                  if (curChar != 62)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 11:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 14:
                  jjAddStates(141, 142);
                  break;
               case 16:
                  if (curChar == 40)
                     jjCheckNAdd(17);
                  break;
               case 17:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 18:
                  if (curChar != 41)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 20:
                  if ((0x5000000000000000L & l) != 0L && kind > 43)
                     kind = 43;
                  break;
               case 21:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  break;
               case 22:
                  if (curChar == 36)
                     jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x83ff040800000000L & l) != 0L)
                     jjCheckNAddStates(143, 148);
                  break;
               case 25:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar != 61)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(114, 119);
                  break;
               case 28:
                  if ((0xa7fffc2affffd9ffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 30:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 31:
                  if (curChar == 36)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(153, 157);
                  break;
               case 33:
                  if (curChar == 36)
                     jjAddStates(158, 160);
                  break;
               case 34:
                  if (curChar == 40)
                     jjCheckNAdd(35);
                  break;
               case 35:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(35, 37);
                  break;
               case 36:
                  if (curChar != 62)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 37:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 40:
                  jjAddStates(87, 88);
                  break;
               case 42:
                  if (curChar == 40)
                     jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar != 41)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 45:
                  if (curChar == 34)
                     jjCheckNAddStates(161, 163);
                  break;
               case 46:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(161, 163);
                  break;
               case 48:
                  jjCheckNAddStates(161, 163);
                  break;
               case 49:
                  if (curChar == 34 && kind > 47)
                     kind = 47;
                  break;
               case 50:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 51:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 52:
                  if (curChar == 39 && kind > 47)
                     kind = 47;
                  break;
               case 53:
                  if (curChar == 36)
                     jjCheckNAddStates(111, 113);
                  break;
               case 54:
                  if (curChar == 40)
                     jjCheckNAdd(55);
                  break;
               case 55:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(55, 57);
                  break;
               case 56:
                  if (curChar == 62)
                     jjCheckNAddStates(106, 110);
                  break;
               case 57:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 60:
                  jjAddStates(93, 94);
                  break;
               case 62:
                  if (curChar == 40)
                     jjCheckNAdd(63);
                  break;
               case 63:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(63, 64);
                  break;
               case 64:
                  if (curChar == 41)
                     jjCheckNAddStates(106, 110);
                  break;
               case 65:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(6, 23);
                  break;
               case 66:
                  if (curChar == 34)
                     jjCheckNAddStates(130, 135);
                  break;
               case 67:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(164, 166);
                  break;
               case 69:
                  jjCheckNAddStates(164, 166);
                  break;
               case 70:
                  if (curChar == 34 && kind > 42)
                     kind = 42;
                  break;
               case 71:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(167, 169);
                  break;
               case 73:
                  jjCheckNAddStates(167, 169);
                  break;
               case 74:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(26, 27);
                  break;
               case 75:
                  if (curChar == 39)
                     jjCheckNAddStates(126, 129);
                  break;
               case 76:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 77:
                  if (curChar == 39 && kind > 42)
                     kind = 42;
                  break;
               case 78:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(26, 27);
                  break;
               case 80:
                  if (curChar == 36)
                     jjCheckNAddStates(120, 125);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 81:
                  if ((0xefffffffffffffffL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(99, 102);
                  }
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 0:
                  if ((0xefffffffffffffffL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(99, 102);
                  }
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 1:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 6:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(136, 140);
                  break;
               case 9:
                  jjAddStates(170, 171);
                  break;
               case 13:
                  if (curChar == 123)
                     jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(14, 15);
                  break;
               case 15:
                  if (curChar != 125)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 17:
                  jjAddStates(172, 173);
                  break;
               case 21:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  break;
               case 23:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(143, 148);
                  break;
               case 24:
                  if (curChar == 91 && kind > 47)
                     kind = 47;
                  break;
               case 28:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 29:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 32:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(153, 157);
                  break;
               case 35:
                  jjAddStates(174, 175);
                  break;
               case 39:
                  if (curChar == 123)
                     jjCheckNAdd(40);
                  break;
               case 40:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if (curChar != 125)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 43:
                  jjAddStates(176, 177);
                  break;
               case 46:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(161, 163);
                  break;
               case 47:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  jjCheckNAddStates(161, 163);
                  break;
               case 51:
                  jjAddStates(178, 179);
                  break;
               case 55:
                  jjAddStates(180, 181);
                  break;
               case 59:
                  if (curChar == 123)
                     jjCheckNAdd(60);
                  break;
               case 60:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 61:
                  if (curChar == 125)
                     jjCheckNAddStates(106, 110);
                  break;
               case 63:
                  jjAddStates(182, 183);
                  break;
               case 67:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(164, 166);
                  break;
               case 68:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  jjCheckNAddStates(164, 166);
                  break;
               case 71:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(167, 169);
                  break;
               case 72:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 73:
                  jjCheckNAddStates(167, 169);
                  break;
               case 76:
                  jjAddStates(184, 185);
                  break;
               case 78:
                  jjAddStates(186, 187);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 81:
               case 2:
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 0:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(99, 102);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 9:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(170, 171);
                  break;
               case 14:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(141, 142);
                  break;
               case 17:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(172, 173);
                  break;
               case 28:
               case 30:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(149, 152);
                  break;
               case 35:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(174, 175);
                  break;
               case 40:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(87, 88);
                  break;
               case 43:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(176, 177);
                  break;
               case 46:
               case 48:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(161, 163);
                  break;
               case 51:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(178, 179);
                  break;
               case 55:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(180, 181);
                  break;
               case 60:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(93, 94);
                  break;
               case 63:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(182, 183);
                  break;
               case 67:
               case 69:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(164, 166);
                  break;
               case 71:
               case 73:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(167, 169);
                  break;
               case 76:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(184, 185);
                  break;
               case 78:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(186, 187);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 81 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(0, 0);
}
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 54;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  else if (curChar == 36)
                     jjAddStates(193, 195);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(52, 53);
                  else if (curChar == 34)
                     jjCheckNAddStates(196, 198);
                  else if (curChar == 35)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(1);
                  }
                  if (curChar == 36)
                     jjCheckNAdd(4);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 3:
                  if (curChar == 36)
                     jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0x83ff040800000000L & l) != 0L)
                     jjCheckNAddStates(199, 204);
                  break;
               case 6:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar != 61)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(205, 210);
                  break;
               case 9:
                  if ((0xa7fffc2affffd9ffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 11:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 12:
                  if (curChar == 36)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(215, 219);
                  break;
               case 14:
                  if (curChar == 36)
                     jjAddStates(220, 222);
                  break;
               case 15:
                  if (curChar == 40)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(16, 18);
                  break;
               case 17:
                  if (curChar != 62)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 18:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 21:
                  jjAddStates(223, 224);
                  break;
               case 23:
                  if (curChar == 40)
                     jjCheckNAdd(24);
                  break;
               case 24:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(24, 25);
                  break;
               case 25:
                  if (curChar != 41)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 26:
                  if (curChar == 34)
                     jjCheckNAddStates(225, 227);
                  break;
               case 27:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 29:
                  jjCheckNAddStates(225, 227);
                  break;
               case 30:
                  if (curChar == 34 && kind > 47)
                     kind = 47;
                  break;
               case 31:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 32:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 39 && kind > 47)
                     kind = 47;
                  break;
               case 34:
                  if (curChar == 36)
                     jjAddStates(193, 195);
                  break;
               case 35:
                  if (curChar == 40)
                     jjCheckNAdd(36);
                  break;
               case 36:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(36, 38);
                  break;
               case 37:
                  if (curChar == 62)
                     jjCheckNAddStates(188, 192);
                  break;
               case 38:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 41:
                  jjAddStates(228, 229);
                  break;
               case 43:
                  if (curChar == 40)
                     jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(44, 45);
                  break;
               case 45:
                  if (curChar == 41)
                     jjCheckNAddStates(188, 192);
                  break;
               case 46:
                  if (curChar == 34)
                     jjCheckNAddStates(196, 198);
                  break;
               case 47:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 49:
                  jjCheckNAddStates(196, 198);
                  break;
               case 50:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 51:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 52:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 53:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 1:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(199, 204);
                  break;
               case 5:
                  if (curChar == 91 && kind > 47)
                     kind = 47;
                  break;
               case 9:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 10:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 13:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(215, 219);
                  break;
               case 16:
                  jjAddStates(230, 231);
                  break;
               case 20:
                  if (curChar == 123)
                     jjCheckNAdd(21);
                  break;
               case 21:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 22:
                  if (curChar != 125)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 24:
                  jjAddStates(232, 233);
                  break;
               case 27:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 28:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  jjCheckNAddStates(225, 227);
                  break;
               case 32:
                  jjAddStates(234, 235);
                  break;
               case 36:
                  jjAddStates(236, 237);
                  break;
               case 40:
                  if (curChar == 123)
                     jjCheckNAdd(41);
                  break;
               case 41:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 42:
                  if (curChar == 125)
                     jjCheckNAddStates(188, 192);
                  break;
               case 44:
                  jjAddStates(238, 239);
                  break;
               case 47:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 48:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  jjCheckNAddStates(196, 198);
                  break;
               case 52:
                  jjAddStates(240, 241);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 9:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 16:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(230, 231);
                  break;
               case 21:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(223, 224);
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(232, 233);
                  break;
               case 27:
               case 29:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 32:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(234, 235);
                  break;
               case 36:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(236, 237);
                  break;
               case 41:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(228, 229);
                  break;
               case 44:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(238, 239);
                  break;
               case 47:
               case 49:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 52:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(240, 241);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 54 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private final int jjMoveNfa_3(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 54;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  else if (curChar == 36)
                     jjAddStates(193, 195);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(52, 53);
                  else if (curChar == 34)
                     jjCheckNAddStates(196, 198);
                  else if (curChar == 35)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(1);
                  }
                  if (curChar == 36)
                     jjCheckNAdd(4);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x87ffc40000000000L & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 3:
                  if (curChar == 36)
                     jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0x83ff040800000000L & l) != 0L)
                     jjCheckNAddStates(199, 204);
                  break;
               case 6:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar != 61)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(205, 210);
                  break;
               case 9:
                  if ((0xa7fffc2affffd9ffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 11:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 12:
                  if (curChar == 36)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0x83ff040800000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(215, 219);
                  break;
               case 14:
                  if (curChar == 36)
                     jjAddStates(220, 222);
                  break;
               case 15:
                  if (curChar == 40)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(16, 18);
                  break;
               case 17:
                  if (curChar != 62)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 18:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 21:
                  jjAddStates(223, 224);
                  break;
               case 23:
                  if (curChar == 40)
                     jjCheckNAdd(24);
                  break;
               case 24:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(24, 25);
                  break;
               case 25:
                  if (curChar != 41)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 26:
                  if (curChar == 34)
                     jjCheckNAddStates(225, 227);
                  break;
               case 27:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 29:
                  jjCheckNAddStates(225, 227);
                  break;
               case 30:
                  if (curChar == 34 && kind > 47)
                     kind = 47;
                  break;
               case 31:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 32:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 39 && kind > 47)
                     kind = 47;
                  break;
               case 34:
                  if (curChar == 36)
                     jjAddStates(193, 195);
                  break;
               case 35:
                  if (curChar == 40)
                     jjCheckNAdd(36);
                  break;
               case 36:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(36, 38);
                  break;
               case 37:
                  if (curChar == 62)
                     jjCheckNAddStates(188, 192);
                  break;
               case 38:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 41:
                  jjAddStates(228, 229);
                  break;
               case 43:
                  if (curChar == 40)
                     jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(44, 45);
                  break;
               case 45:
                  if (curChar == 41)
                     jjCheckNAddStates(188, 192);
                  break;
               case 46:
                  if (curChar == 34)
                     jjCheckNAddStates(196, 198);
                  break;
               case 47:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 49:
                  jjCheckNAddStates(196, 198);
                  break;
               case 50:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 51:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 52:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 53:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 1:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(199, 204);
                  break;
               case 5:
                  if (curChar == 91 && kind > 47)
                     kind = 47;
                  break;
               case 9:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 10:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 13:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(215, 219);
                  break;
               case 16:
                  jjAddStates(230, 231);
                  break;
               case 20:
                  if (curChar == 123)
                     jjCheckNAdd(21);
                  break;
               case 21:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 22:
                  if (curChar != 125)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 24:
                  jjAddStates(232, 233);
                  break;
               case 27:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 28:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  jjCheckNAddStates(225, 227);
                  break;
               case 32:
                  jjAddStates(234, 235);
                  break;
               case 36:
                  jjAddStates(236, 237);
                  break;
               case 40:
                  if (curChar == 123)
                     jjCheckNAdd(41);
                  break;
               case 41:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 42:
                  if (curChar == 125)
                     jjCheckNAddStates(188, 192);
                  break;
               case 44:
                  jjAddStates(238, 239);
                  break;
               case 47:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 48:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  jjCheckNAddStates(196, 198);
                  break;
               case 52:
                  jjAddStates(240, 241);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 9:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(211, 214);
                  break;
               case 16:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(230, 231);
                  break;
               case 21:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(223, 224);
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(232, 233);
                  break;
               case 27:
               case 29:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 32:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(234, 235);
                  break;
               case 36:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(236, 237);
                  break;
               case 41:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(228, 229);
                  break;
               case 44:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(238, 239);
                  break;
               case 47:
               case 49:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(196, 198);
                  break;
               case 52:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(240, 241);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 54 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   18, 19, 23, 24, 50, 11, 12, 15, 25, 26, 28, 42, 47, 30, 3, 4, 
   6, 55, 56, 59, 3, 4, 18, 19, 23, 24, 50, 6, 11, 12, 15, 55, 
   56, 59, 73, 74, 75, 76, 64, 65, 67, 68, 69, 71, 3, 4, 5, 6, 
   13, 14, 18, 19, 20, 23, 24, 50, 25, 26, 28, 30, 25, 26, 28, 29, 
   30, 35, 36, 39, 37, 38, 43, 44, 46, 57, 58, 64, 65, 67, 68, 69, 
   71, 8, 10, 16, 17, 32, 34, 40, 41, 48, 49, 52, 54, 60, 61, 73, 
   74, 75, 76, 2, 3, 5, 7, 12, 13, 16, 21, 22, 26, 27, 53, 58, 
   59, 62, 28, 29, 31, 45, 50, 33, 12, 13, 16, 58, 59, 62, 76, 77, 
   78, 79, 67, 68, 70, 71, 72, 74, 2, 3, 5, 6, 7, 14, 15, 21, 
   22, 23, 26, 27, 53, 28, 29, 31, 33, 28, 29, 31, 32, 33, 38, 39, 
   42, 46, 47, 49, 67, 68, 70, 71, 72, 74, 9, 11, 17, 18, 35, 37, 
   43, 44, 51, 52, 55, 57, 63, 64, 76, 77, 78, 79, 2, 3, 7, 8, 
   34, 39, 40, 43, 47, 48, 50, 2, 3, 4, 7, 8, 34, 9, 10, 12, 
   26, 31, 14, 9, 10, 12, 14, 9, 10, 12, 13, 14, 19, 20, 23, 21, 
   22, 27, 28, 30, 41, 42, 16, 18, 24, 25, 32, 33, 36, 38, 44, 45, 
   52, 53, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, "\12", null, "\73", "\46\46", "\174\174", "\73\73", 
"\74\74", "\76\76", "\74\46", "\76\46", "\74\76", "\74\74\55", "\76\174", "\151\146", 
"\145\154\151\146", "\164\150\145\156", "\145\154\163\145", "\146\151", "\144\157", 
"\144\157\156\145", "\143\141\163\145", "\145\163\141\143", "\167\150\151\154\145", 
"\165\156\164\151\154", "\146\157\162", "\173", "\41", "\50", "\175", "\151\156", "\74", "\76", "\51", 
"\46", "\73", "\174", null, "\74\133", null, null, null, null, null, null, null, null, 
null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "CMD", 
   "HERE_END", 
   "HERE", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 0, 0, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   0, 
};
static final long[] jjtoToken = {
   0x48fffffffffd1L, 
};
static final long[] jjtoSkip = {
   0x100000000002eL, 
};
static final long[] jjtoSpecial = {
   0x20L, 
};
static final long[] jjtoMore = {
   0x2000000000000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[81];
private final int[] jjstateSet = new int[162];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public ShellParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public ShellParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 81; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         t.image = "";
      else
         t.image = image.toString();
      t.beginLine = t.endLine = input_stream.getBeginLine();
      t.beginColumn = t.endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      t.image = (im == null) ? input_stream.GetImage() : im;
      t.beginLine = input_stream.getBeginLine();
      t.beginColumn = input_stream.getBeginColumn();
      t.endLine = input_stream.getEndLine();
      t.endColumn = input_stream.getEndColumn();
   }
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 50;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
       case 3:
         try { input_stream.backup(0);
            while (curChar <= 13 && (0x2000L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 49)
         {
            jjmatchedKind = 49;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else 
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 49 :
         if (image == null)
            image = new StringBuffer();
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
            if( image.toString().endsWith( "\n" + here_end + "\n" )) {
                        image.setLength( image.length() - here_end.length()  - 1);
                         input_stream.backup(1);

                        SwitchTo(HERE_END);
                        }
         break;
      default : 
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 28 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[28]);
                         in_for = true ;
         break;
      case 33 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[33]);
                    if( ! in_for ) matchedToken.kind = WORD ; in_for = false ;
         break;
      case 41 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[41]);
                matchedToken.image = readXExpr();
         break;
      case 47 :
        if (image == null)
            image = new StringBuffer();
            image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                String m = matchedToken.image;
                if( m.endsWith("=<[") )
                        matchedToken.image = m.substring(0,m.length()-2)  + readXExpr();
         break;
      default : 
         break;
   }
}
}
